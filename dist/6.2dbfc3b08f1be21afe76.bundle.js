(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{149:function(e,t,n){"use strict";var r=n(590);function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var o=n(0),c=n.n(o),i=n(29);n(8);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function u(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}var s=n(28);n.d(t,"a",(function(){return y}));c.a.Component;c.a.Component;var f=function(e,t){return"function"==typeof e?e(t):e},p=function(e,t){return"string"==typeof e?Object(i.c)(e,null,null,t):e},v=function(e){return e},m=c.a.forwardRef;void 0===m&&(m=v);var h=m((function(e,t){var n=e.innerRef,r=e.navigate,a=e.onClick,o=u(e,["innerRef","navigate","onClick"]),i=o.target,s=l({},o,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||i&&"_self"!==i||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return s.ref=v!==m&&t||n,c.a.createElement("a",s)}));var y=m((function(e,t){var n=e.component,a=void 0===n?h:n,o=e.replace,i=e.to,y=e.innerRef,d=u(e,["component","replace","to","innerRef"]);return c.a.createElement(r.e.Consumer,null,(function(e){e||Object(s.a)(!1);var n=e.history,r=p(f(i,e.location),e.location),u=r?n.createHref(r):"",h=l({},d,{href:u,navigate:function(){var t=f(i,e.location);(o?n.replace:n.push)(t)}});return v!==m?h.ref=t||y:h.innerRef=y,c.a.createElement(a,h)}))})),d=function(e){return e},g=c.a.forwardRef;void 0===g&&(g=d);g((function(e,t){var n=e["aria-current"],a=void 0===n?"page":n,o=e.activeClassName,i=void 0===o?"active":o,v=e.activeStyle,m=e.className,h=e.exact,b=e.isActive,O=e.location,w=e.strict,j=e.style,E=e.to,x=e.innerRef,C=u(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return c.a.createElement(r.e.Consumer,null,(function(e){e||Object(s.a)(!1);var n=O||e.location,o=p(f(E,n),n),u=o.pathname,N=u&&u.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),R=N?Object(r.f)(n.pathname,{path:N,exact:h,strict:w}):null,P=!!(b?b(R,n):R),k=P?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(m,i):m,T=P?l({},j,{},v):j,_=l({"aria-current":P&&a||null,className:k,style:T,to:o},C);return d!==g?_.ref=t||x:_.innerRef=x,c.a.createElement(y,_)}))}))},593:function(e,t,n){var r=n(594);"string"==typeof r&&(r=[[e.i,r,""]]);var a={insert:"head",singleton:!1};n(337)(r,a);r.locals&&(e.exports=r.locals)},594:function(e,t,n){(e.exports=n(336)(!1)).push([e.i,".pull-right{display:flex;justify-content:flex-end}.h1{margin-bottom:20px !important}.img{display:block;margin-left:auto;margin-right:auto;width:50%}\n",""])},595:function(e,t,n){"use strict";var r=n(0),a=n.n(r),o=n(591),c=n(13),i=n.n(c),l=n(56);function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var f=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n},p=function(e){return r.createElement(l.a,null,(function(t){var n,a=t.getPrefixCls,o=e.prefixCls,c=e.type,l=void 0===c?"horizontal":c,p=e.orientation,v=void 0===p?"center":p,m=e.className,h=e.children,y=e.dashed,d=f(e,["prefixCls","type","orientation","className","children","dashed"]),g=a("divider",o),b=v.length>0?"-".concat(v):v,O=i()(m,g,"".concat(g,"-").concat(l),(s(n={},"".concat(g,"-with-text").concat(b),h),s(n,"".concat(g,"-dashed"),!!y),n));return r.createElement("div",u({className:O},d,{role:"separator"}),h&&r.createElement("span",{className:"".concat(g,"-inner-text")},h))}))},v=n(69),m=(n(593),o.a.Header);t.a=function(e){var t=e.children;return a.a.createElement("div",{style:{textAlign:"center"}},a.a.createElement(m,{as:"h1",className:"h1"},"webpack-for-react"),t,a.a.createElement(p,null),a.a.createElement("p",{className:"pullRight"},"Made with ",a.a.createElement(v.a,{type:"heart",theme:"twoTone",twoToneColor:"#eb2f96"})," ","by Tai Pham"),a.a.createElement("img",{src:"../../src/images/test.jpeg",alt:"Paris",className:"img"}))}},636:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(591),c=n(149),i=n(595),l=o.a.Header;t.default=function(){return a.a.createElement(i.a,null,a.a.createElement(l,{as:"h2"},"Test"),a.a.createElement(c.a,{to:"/"},"Test!!!"))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,